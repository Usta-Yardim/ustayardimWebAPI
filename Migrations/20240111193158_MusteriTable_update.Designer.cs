// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UstaYardımAPI.Models;

#nullable disable

namespace UstaYardımAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240111193158_MusteriTable_update")]
    partial class MusteriTable_update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UstaYardımAPI.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("UstaYardımAPI.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Evulation_Table", b =>
                {
                    b.Property<int>("DegerlendirmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DegerlendirmeDetaylari")
                        .HasColumnType("TEXT");

                    b.Property<int>("UstaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DegerlendirmeId");

                    b.ToTable("Evulation_Tables");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Galeri_Table", b =>
                {
                    b.Property<int>("GaleriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GaleriDetaylari")
                        .HasColumnType("TEXT");

                    b.Property<int>("UstaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GaleriId");

                    b.ToTable("Galeri_Tables");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Ilceler", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IlAdi")
                        .HasColumnType("TEXT");

                    b.Property<int>("IlId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IlceAdi")
                        .HasColumnType("TEXT");

                    b.HasKey("IlceId");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Iller", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IlAdi")
                        .HasColumnType("TEXT");

                    b.HasKey("IlId");

                    b.ToTable("Iller");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Kategoriler", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("KategoriName")
                        .HasColumnType("TEXT");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Mahalleler", b =>
                {
                    b.Property<int>("MahalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IlAdi")
                        .HasColumnType("TEXT");

                    b.Property<int>("IlId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IlceAdi")
                        .HasColumnType("TEXT");

                    b.Property<int>("IlceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MahalleAdi")
                        .HasColumnType("TEXT");

                    b.HasKey("MahalleId");

                    b.ToTable("Mahalleler");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Musteri_Table", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FavoriUstaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IlceinfoIlceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IlinfoIlId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MahalleinfoMahalleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilImgPath")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("IlceinfoIlceId");

                    b.HasIndex("IlinfoIlId");

                    b.HasIndex("MahalleinfoMahalleId");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Usta_Table", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hakkinda")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IlceinfoIlceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IlinfoIlId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MahalleinfoMahalleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilImgPath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Puan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferansImgPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("TamamlananIs")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("IlceinfoIlceId");

                    b.HasIndex("IlinfoIlId");

                    b.HasIndex("MahalleinfoMahalleId");

                    b.ToTable("Ustalar");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Yorumlar_Table", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UstaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("YorumDetaylari")
                        .HasColumnType("TEXT");

                    b.HasKey("YorumId");

                    b.ToTable("Yorumlar_Tables");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UstaYardımAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Musteri_Table", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.Ilceler", "Ilceinfo")
                        .WithMany()
                        .HasForeignKey("IlceinfoIlceId");

                    b.HasOne("UstaYardımAPI.Models.Iller", "Ilinfo")
                        .WithMany()
                        .HasForeignKey("IlinfoIlId");

                    b.HasOne("UstaYardımAPI.Models.Mahalleler", "Mahalleinfo")
                        .WithMany()
                        .HasForeignKey("MahalleinfoMahalleId");

                    b.HasOne("UstaYardımAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilceinfo");

                    b.Navigation("Ilinfo");

                    b.Navigation("Mahalleinfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UstaYardımAPI.Models.Usta_Table", b =>
                {
                    b.HasOne("UstaYardımAPI.Models.Ilceler", "Ilceinfo")
                        .WithMany()
                        .HasForeignKey("IlceinfoIlceId");

                    b.HasOne("UstaYardımAPI.Models.Iller", "Ilinfo")
                        .WithMany()
                        .HasForeignKey("IlinfoIlId");

                    b.HasOne("UstaYardımAPI.Models.Mahalleler", "Mahalleinfo")
                        .WithMany()
                        .HasForeignKey("MahalleinfoMahalleId");

                    b.HasOne("UstaYardımAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilceinfo");

                    b.Navigation("Ilinfo");

                    b.Navigation("Mahalleinfo");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
